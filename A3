'''3. Implement e-mail spam filtering using text classification algorithm with appropriate dataset.'''
'''3. Implement e-mail spam filtering using text classification algorithm with appropriate dataset.'''

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB

spam_df = pd.read_csv("spam.csv")

spam_df

spam_df.groupby('Category').describe()

spam_df['spam'] = spam_df['Category'].apply(lambda x: 1 if x == 'spam' else 0)

spam_df

X_train, X_test, y_train, y_test = train_test_split(spam_df.Message, spam_df.spam, test_size=0.25)

X_train

cv = CountVectorizer()
x_train_count = cv.fit_transform(X_train.values)

x_train_count

model = MultinomialNB()
model.fit(x_train_count, y_train)

email_ham = ['Hey how are you?']
email_ham_count = cv.transform(email_ham)
model.predict(email_ham_count)

email_spam = ["Free entry "]
email_spam_count = cv.transform(email_spam)
model.predict(email_spam_count)

x_test_count = cv.transform(X_test)

model.score(x_test_count,y_test)

sample = ["HI how are you"]
sample_vec = cv.transform(sample)
p=model.predict(sample_vec)
if p == 0:
    print("\nPrediction for sample: Ham")
else: 
    print("\nPrediction for sample: Spam")  # 1 means spam
